version: "3.4"

services:
  mongo1:
    image: mongo:4.2.3-bionic
    hostname: mongo1
    restart: always
    ports:
      - 27017:27017
    env_file: .env
    logging:
      driver: "none"
    volumes:
      - "mongo-db-data1:/data/db"
      - "mongo-db-configdb1:/data/configdb"
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "devrs"]

  mongo2:
    image: mongo:4.2.3-bionic
    hostname: mongo2
    restart: always
    depends_on:
      - mongo1
    ports:
      - 27018:27017
    env_file: .env
    logging:
      driver: "none"
    volumes:
      - "mongo-db-data2:/data/db"
      - "mongo-db-configdb2:/data/configdb"
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "devrs"]

  mongo3:
    image: mongo:4.2.3-bionic
    hostname: mongo3
    restart: always
    depends_on:
      - mongo2
    ports:
      - 27019:27017
    env_file: .env
    logging:
      driver: "none"
    volumes:
      - "mongo-db-data3:/data/db"
      - "mongo-db-configdb3:/data/configdb"
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "devrs"]

  mongosetup:
    build:
      context: ./
      dockerfile: docker/mongoSetup/Dockerfile
    hostname: mongosetup
    restart: on-failure
    network_mode: "host"
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    stdin_open: true
    tty: true
    env_file:
      - .env
      - alarmHandlerServer/alarmHandler.env

  mongo-express:
    image: mongo-express:0.54.0
    hostname: mongo-express
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongosetup
    env_file: .env
    logging:
      driver: "none"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo1

volumes:
  mongo-db-data1:
  mongo-db-configdb1:
  mongo-db-data2:
  mongo-db-configdb2:
  mongo-db-data3:
  mongo-db-configdb3:
